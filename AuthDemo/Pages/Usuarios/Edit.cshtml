@page
@model AuthDemo.Pages.Usuarios.EditModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Edit</h1>

<h4>User</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <a asp-area="Identity" asp-page="/Account/ChangePassword" asp-route-returnUrl="/Usuarios/Edit?id=@Model.Usuario.Id" asp-route-id="@Model.Usuario.Id">Change password</a>
        <form method="post">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" asp-for="Usuario.Id" />
            <input type="hidden" asp-for="Usuario.UserName" />
            <input type="hidden" asp-for="Usuario.Email" />
            <input type="hidden" asp-for="Usuario.PhoneNumber" />
            <div class="form-floating mb-3">
                <input asp-for="Usuario.UserName" class="form-control" disabled />
                <label asp-for="Usuario.UserName">Username</label>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="email" aria-required="true" placeholder="adam77@email.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.PhoneNumber" class="form-control" autocomplete="email" aria-required="true" placeholder="+34654800900" />
                <label asp-for="Input.PhoneNumber">Phone Number</label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>
@*             <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div> *@

@*             <div class="form-group">
                <label asp-for="User.UserName" class="control-label"></label>
                <input asp-for="User.UserName" class="form-control" disabled />
                <span asp-validation-for="User.UserName" class="text-danger"></span>
            </div> *@
@*             <div class="form-group">
                <label asp-for="User.NormalizedUserName" class="control-label"></label>
                <input asp-for="User.NormalizedUserName" class="form-control" />
                <span asp-validation-for="User.NormalizedUserName" class="text-danger"></span>
            </div> *@
@*             <div class="form-group">
                <label asp-for="User.Email" class="control-label"></label>
                <input asp-for="User.Email" class="form-control" />
                <span asp-validation-for="User.Email" class="text-danger"></span>
            </div> *@
@*             <div class="form-group">
                <label asp-for="User.NormalizedEmail" class="control-label"></label>
                <input asp-for="User.NormalizedEmail" class="form-control" />
                <span asp-validation-for="User.NormalizedEmail" class="text-danger"></span>
            </div> *@
@*             <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="User.EmailConfirmed" /> @Html.DisplayNameFor(model => model.User.EmailConfirmed)
                </label>
            </div> *@
@*             <div class="form-group">
                <label asp-for="User.PasswordHash" class="control-label"></label>
                <input asp-for="User.PasswordHash" class="form-control" />
                <span asp-validation-for="User.PasswordHash" class="text-danger"></span>
            </div> *@
@*             <div class="form-group">
                <label asp-for="User.SecurityStamp" class="control-label"></label>
                <input asp-for="User.SecurityStamp" class="form-control" />
                <span asp-validation-for="User.SecurityStamp" class="text-danger"></span>
            </div> *@
@*             <div class="form-group">
                <label asp-for="User.ConcurrencyStamp" class="control-label"></label>
                <input asp-for="User.ConcurrencyStamp" class="form-control" />
                <span asp-validation-for="User.ConcurrencyStamp" class="text-danger"></span>
            </div> *@
@*             <div class="form-group">
                <label asp-for="User.PhoneNumber" class="control-label"></label>
                <input asp-for="User.PhoneNumber" class="form-control" />
                <span asp-validation-for="User.PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="User.PhoneNumberConfirmed" /> @Html.DisplayNameFor(model => model.User.PhoneNumberConfirmed)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="User.TwoFactorEnabled" /> @Html.DisplayNameFor(model => model.User.TwoFactorEnabled)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="User.LockoutEnd" class="control-label"></label>
                <input asp-for="User.LockoutEnd" class="form-control" disabled />
                <span asp-validation-for="User.LockoutEnd" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="User.LockoutEnabled" /> @Html.DisplayNameFor(model => model.User.LockoutEnabled)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="User.AccessFailedCount" class="control-label"></label>
                <input asp-for="User.AccessFailedCount" class="form-control" disabled />
                <span asp-validation-for="User.AccessFailedCount" class="text-danger"></span>
            </div> *@
            <div>
                <h5>User Roles</h5>
                <hr />
                <div>
@*                     @foreach (var item in Model.UsuarioRoles)
                    {
                        <input type="hidden" name="UsuarioRoles.Index" value="@item.Id" />
                        <input type="hidden" name="UsuarioRoles[@item.Id].Id" value="@item.Id" />
                        <input type="hidden" name="UsuarioRoles[@item.Id].Name" value="@item.Name" />
                        <input type="hidden" name="UsuarioRoles[@item.Id].Checked" value="@item.Checked" />

                        <input name="UsuarioRoles[@item.Id].Checked" type="checkbox" value="@item.Checked" /> @item.Name

                        <br />
                    } *@
                    @for (int i = 0; i < Model.UsuarioRoles.Count(); i++)
                    {
                        <div class="form-group">
@*                             <input type="hidden" asp-for="UsuarioRoles[i].Id" />
                            <input type="hidden" asp-for="UsuarioRoles[i].Name" />
                            <input type="hidden" asp-for="UsuarioRoles[i].Checked" />


                            <input asp-for="UsuarioRoles[i].Checked" />
                            <label asp-for="UsuarioRoles[i].Checked" class="form-check-label">@Model.UsuarioRoles[i].Name</label> *@
                            @Html.CheckBoxFor(x => Model.UsuarioRoles[i].Checked,
                                     new
                                     {
                                         @id = @Model.UsuarioRoles[i].Id,
                                         @class = "form-check-input",
                                         aria_checked = @Model.UsuarioRoles[i].Checked.ToString().ToLower(),
                                         aria_label = @Model.UsuarioRoles[i].Name,
                                     })
                            <input type="hidden" asp-for="@Model.UsuarioRoles[i].Name" />
                            <label class="form-check-label"
                                   for="@Model.UsuarioRoles[i].Id" aria-labelby="@Model.UsuarioRoles[i].Id">
                                @Model.UsuarioRoles[i].Name
                            </label>

                        </div>                        
                    }
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
            $checkboxHelper.initialize(document.getElementsByClassName("form-check-input"));
        });

    var $checkboxHelper = $checkboxHelper || {};
    $checkboxHelper = function () {
        var setupCheckboxesClickEvents = function (checkboxes) {

            for (let index = 0; index < checkboxes.length; index++) {

                checkboxes[index].onclick = function () {

                    if (checkboxes[index].getAttribute('aria-checked') === 'true') {
                        checkboxes[index].setAttribute('aria-checked', 'false');
                    } else {
                        checkboxes[index].setAttribute('aria-checked', 'true');
                    }
                };
            }
        }

        // for testing
        var setCheckboxesAriaChecked = function (checkboxes) {

            for (let index = 0; index < checkboxes.length; index++) {
                checkboxes[index].onclick = function () {
                    checkboxes[index].setAttribute('aria-checked', 'false');
                };
            }
        }


        return {
            initialize: setupCheckboxesClickEvents,
            setAriaCheckedFalse: setCheckboxesAriaChecked
        };
    }();
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
